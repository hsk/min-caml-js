default: module15 run

run:
	./module15

module02: module02.ml
	ocamlfind ocamlc -package ppx_deriving.show module02.ml -o module02
	./module02

module03: module03.ml
	ocamlfind ocamlc -package ppx_deriving.show module03.ml -o module03
	./module03

module04: module04.ml
	ocamlfind ocamlc -package ppx_deriving.show module04.ml -o module04
	./module04

module05: module05.ml
	ocamlfind ocamlc -package ppx_deriving.show module05.ml -o module05
	./module05

module06: module06.ml
	ocamlfind ocamlc -package ppx_deriving.show module06.ml -o module06
	./module06

module07: module07.ml
	ocamlfind ocamlc -package ppx_deriving.show module07.ml -o module07
	./module07

module08: module08.ml
	ocamlfind ocamlc -package ppx_deriving.show module08.ml -o module08
	./module08

module09: module09.ml
	ocamlfind ocamlc -package ppx_deriving.show module09.ml -o module09
	./module09

module10: module10.ml
	ocamlfind ocamlc -package ppx_deriving.show module10.ml -o module10
	./module10

module11: module11.ml
	ocamlfind ocamlc -package ppx_deriving.show module11.ml -o module11
	./module11

module12: module12.ml
	ocamlfind ocamlc -package ppx_deriving.show module12.ml -o module12
	./module12

module13: module13.ml
	ocamlfind ocamlc -package ppx_deriving.show module13.ml -o module13
	./module13

module14: module14.ml
	ocamlfind ocamlc -package ppx_deriving.show module14.ml -o module14
	./module14

module15: module15.ml
	ocamlfind ocamlc -package ppx_deriving.show module15.ml -o module15
	./module15

clean:
	rm -rf *.cm* module02 module03 module04 module05 module06 module07 module08 module09 module10 module11 module12 module13 module14 module15
